<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>David Paulsson</title>
		<description>Design and front end development</description>
		<link>http://davidpaulsson.se</link>
		<atom:link href="http://davidpaulsson.se/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Look, ma! No database!</title>
				<description>&lt;p&gt;It’s portfolio redesign season and I’ve gone static. I’ve ditched Wordpress in favor of Jekyll. And from now on I’m going to be writing in English only. Ooh, I did not see myself doing this a year ago.&lt;/p&gt;

&lt;h2 id=&#39;ditched_wordpress_wtf_dude&#39;&gt;Ditched WordPress? Wtf dude?&lt;/h2&gt;

&lt;p&gt;Don’t get me wrong. &lt;a href=&#39;http://wordpress.org/&#39;&gt;WordPress&lt;/a&gt; is an awesome blog engine and CMS but nothing can really beat a static site in pure HTML. Throw these files onto &lt;strong&gt;any&lt;/strong&gt; server and you’ve got a speedy site. According to &lt;a href=&#39;https://www.pingdom.com/&#39;&gt;Pingdom&lt;/a&gt; my new site now has &lt;a href=&#39;http://tools.pingdom.com/fpt/#!/ThiqZ/http://davidpaulsson.se/&#39;&gt;just over 600ms load time&lt;/a&gt; and we all know &lt;a href=&#39;https://developers.google.com/speed/&#39;&gt;speed is important&lt;/a&gt;, right?&lt;/p&gt;

&lt;p&gt;A static blog engine thingie is something I’ve been wanting to try out and learn for quite some time now and I figured that the only way to actually learn anything was to &lt;a href=&#39;http://www.urbandictionary.com/define.php?term=JFDI&#39;&gt;JFDI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Stick around and I’ll try to explain my workflow.&lt;/p&gt;

&lt;h2 id=&#39;who_is_this_jekyll_you_speak_about&#39;&gt;Who is this Jekyll you speak about?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#39;http://jekyllrb.com/&#39;&gt;Jekyll&lt;/a&gt; is a tool to “transform your plain text into static websites and blogs. No more databases, comment moderation, or pesky updates to install—just your content”.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;jekyllrb.com&#39; src=&#39;/img/posts/jekyllrb.com.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;In other words you create your templates in HTML, write your site content in Markdown (or &lt;a href=&#39;http://textile.sitemonks.com/&#39;&gt;Textile&lt;/a&gt;) and let Jekyll compile everything to finished &lt;code&gt;.html&lt;/code&gt; files. And if you’ve got your fancy pants on you throw in some &lt;a href=&#39;http://wiki.shopify.com/Liquid&#39;&gt;Liquid&lt;/a&gt; templating markup (in your HTML templates) before you let Jekyll spit out your static site ready for deployment.&lt;/p&gt;

&lt;h3 id=&#39;how_to_set_it_up&#39;&gt;How to set it up&lt;/h3&gt;

&lt;p&gt;You need to be semi comfortable with the command line. If you&amp;#8217;re thinking that your not, you&amp;#8217;re in for a surprise; it&amp;#8217;s actually really simple. I hate the command line. But even I was able to make this step.&lt;/p&gt;

&lt;h4 id=&#39;install_and_use_jekyll&#39;&gt;Install and use Jekyll&lt;/h4&gt;

&lt;p&gt;In order to run Jekyll you need to have it installed on your computer. So fire up that terminal app and write&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;n&#39;&gt;gem&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;install&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;jekyll&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;~&lt;/span&gt; &lt;span class=&#39;err&#39;&gt;$&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;jekyll&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;my&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;awesome&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;site&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;~&lt;/span&gt; &lt;span class=&#39;err&#39;&gt;$&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;cd&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;my&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;awesome&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;site&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;~&lt;/span&gt;&lt;span class=&#39;sr&#39;&gt;/my-awesome-site $ jekyll serve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can browse to &lt;code&gt;http://localhost:4000&lt;/code&gt; and view your site! If you’re really cool you type &lt;code&gt;~/my-awesome-site $ jekyll serve --watch&lt;/code&gt; and Jekyll will recompile your site every time it detects a change. &lt;a href=&#39;http://jekyllrb.com/docs/usage/&#39;&gt;Here’s a list of all available Jekyll commands&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And yeah, that’s it! As simple as that.&lt;/p&gt;

&lt;h2 id=&#39;my_redesign_toolbox&#39;&gt;My redesign toolbox&lt;/h2&gt;

&lt;p&gt;Programs and scripts to make my life easier. Here is what I use, and now I&amp;#8217;m sharing my secret sauce recipe with you.&lt;/p&gt;

&lt;h3 id=&#39;programs&#39;&gt;Programs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;http://www.sublimetext.com/2&#39;&gt;Sublime Text 2&lt;/a&gt;. My weapon of choice when it comes to IDEs. Speedy, customizable and awesome.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt=&#39;Sublime Text 2&#39; src=&#39;/img/posts/sublimetext.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;http://incident57.com/codekit/&#39;&gt;Codekit&lt;/a&gt;. I use it to compile my SASS to CSS and concatenate and minify my JS. Yes, you could use Grunt or Jekyll plugins or whatever to do that but Codekit comes with a personal favorite of mine: style injection. This is way better than live reload. And I like to use a GUI whenever I can.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://imageoptim.com/&#39;&gt;ImgOptim&lt;/a&gt;. Makes your images small(er). Does a better job than Codekit in my opinion.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://www.iawriter.com/&#39;&gt;iA Writer&lt;/a&gt;. I write posts in Markdown on my phone, tablet or computer. iA Writer makes writing a pleasure. And it synchs all documents seamlessly between my devices through iCloud and Dropbox.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt=&#39;iA Writer&#39; src=&#39;/img/posts/iawriter.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;http://www.photoshop.com/&#39;&gt;Photoshop&lt;/a&gt;. Yeah, design in the browser and yada yada. I still enjoy the process of mocking things up visually before I start to code. &lt;a href=&#39;http://davidpaulsson.se/img/posts/davidpaulsson_se-large.psd.zip&#39;&gt;Here’s a &lt;code&gt;.psd&lt;/code&gt; file of how this site looked in Photoshop before code&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#39;services&#39;&gt;Services&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;https://github.com/&#39;&gt;Github&lt;/a&gt;. I push all my source files to Github. Easy to manage, fun to share. Version control and…ye, I don’t need to tell you how awesome it is.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://ftploy.com/&#39;&gt;FTPloy&lt;/a&gt;. Push to Github (or &lt;a href=&#39;https://bitbucket.org/&#39;&gt;Bitbucket&lt;/a&gt;) and deploy with FTP/SSH. Did I mention it’s free?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt=&#39;FTPloy&#39; src=&#39;/img/posts/ftploy.png&#39; /&gt;&lt;/p&gt;

&lt;h3 id=&#39;scripts&#39;&gt;Scripts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;http://jquery.com/&#39;&gt;jQuery&lt;/a&gt;. No surprise here.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://modernizr.com/&#39;&gt;Modernizer&lt;/a&gt;. Detect browser features easy. For example: toss in some SVG graphics and have Modernizer tell you when the browser doesn’t support it by adding &lt;code&gt;.no-svg&lt;/code&gt; to the body tag. And it also comes with html5shiv built in for those old Internet Explorer versions that doesn’t support the new HTML5 tags.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;https://github.com/scottjehl/Respond&#39;&gt;Respond.js&lt;/a&gt;. Only load this for older IE as all it does is to polyfill for min/max-width CSS3 Media Queries for those browsers.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://fitvidsjs.com/&#39;&gt;Fitvids.js&lt;/a&gt;. Made by &lt;a href=&#39;http://chriscoyier.net/&#39;&gt;Chris Coyer&lt;/a&gt; and &lt;a href=&#39;http://daverupert.com/&#39;&gt;Dave Rupert&lt;/a&gt; their explanation says it all &lt;em&gt;“A lightweight, easy-to-use jQuery plugin for fluid width video embeds”&lt;/em&gt;. &lt;a href=&#39;http://davidpaulsson.se/fem-minuter-fran-mitt-brollop/&#39;&gt;Here’s an expamle post using Fitvids.js&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m sure I’ll add more scripts as I continue to iterate on this site and start to add my case studies but these are the ones for this 1.0 version.&lt;/p&gt;

&lt;p&gt;Any thoughts and/or suggestions? Please consider leaving a comment below. If you find a bug or something quirky don’t be shy and &lt;a href=&#39;https://github.com/davidpaulsson/davidpaulsson.se&#39;&gt;submit an issue on Github&lt;/a&gt;.&lt;/p&gt;</description>
				<pubDate>Tue, 30 Jul 2013 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/look-ma-no-database</link>
				<guid isPermaLink="true">http://davidpaulsson.se/look-ma-no-database</guid>
			</item>
		
			<item>
				<title>En levande logotyp</title>
				<description>&lt;p&gt;Jag har länge arbetat utan en logotyp, dels för att jag inte behövt en och dels därför att jag aldrig kommit till skott att skapa mig en egen logotyp (skomakarens barn och allt det där). Men nu har jag haft en idé länge som jag förverkligat. Det här är min nya identitet.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;David Paulsson&#39; src=&#39;http://davidpaulsson.se/img/posts/dp-logo-1.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Min tanke med en logotyp är att det är en rätt generisk symbol man kan stämpla på nästan vilken yta som helst. Som en fast form eller som ett hål som visar det som finns under. Men den måste också förmedla någonting. För mig personligen gör det ingenting om det inte är helt tydligt vad dock.&lt;/p&gt;

&lt;p&gt;Men min identitet kommer att uppdateras med jämna mellanrum efterhand som jag utvecklas. Formen är ett spindeldiagram, en representation över vad jag arbetar med och hur långt jag själv anser mig vara utvecklad inom respektive område. Grundformen är ett spindeldiagram som efterhand kommer att ändras. Jag lär mig mer. Jag ändrar fokus. Min identitet uppdateras och följer med, fast bara tillräckligt för att ändå kännas som samma logotyp.&lt;/p&gt;

&lt;p&gt;Ungefär så här ser jag mig själv just nu under våren 2013.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;David Paulsson 2013&#39; src=&#39;http://davidpaulsson.se/img/posts/dp-logo-4.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Det ultimata målet är att ha en logotyp som är en sexkantig polygon. Så, välkommen till mig själv 2013. Jag hoppas jag byter logotyp snart. Det är målet; att uppdateras.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;David Paulsson&#39; src=&#39;http://davidpaulsson.se/img/posts/dp-logo-3.png&#39; /&gt;&lt;/p&gt;</description>
				<pubDate>Mon, 15 Apr 2013 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/en-levande-logotyp</link>
				<guid isPermaLink="true">http://davidpaulsson.se/en-levande-logotyp</guid>
			</item>
		
			<item>
				<title>WyWallet: Släpp inte en tjänst om den inte är färdig</title>
				<description>&lt;p&gt;Tekniktörstande man är så har jag registrerat mig och hoppat på &lt;a href=&#39;http://wywallet.se/&#39;&gt;WyWallet&lt;/a&gt;. Ett samarbete mellan alla stora teleoperatörer: Telia, Halebop, Tele2, Comviq, Telenor och 3. En underbar idé, äntligen kan jag betala SMS-köp via mitt kontokort—eller via min WyWallet-plånbok rättare sagt.&lt;/p&gt;

&lt;p&gt;Eftersom jag har ett företagsabonnemang så nappade jag verkligen direkt. Rätt ofta så vill jag köpa en bussbiljett eller lösa parkering utan att min arbetsgivare ska behöva betala för mina privata kostnader. Men ibland så vill jag ändå att &lt;a href=&#39;http://bybrick.se/&#39;&gt;byBrick&lt;/a&gt; ska betala, till exempel vill jag fortfarande kunna köpa SMS-biljett hos SL när jag ska besöka vårt Stockholmskontor. Så jag vill kunna välja.&lt;/p&gt;

&lt;h2 id=&#39;idealiskt_scenario&#39;&gt;Idealiskt scenario&lt;/h2&gt;

&lt;p&gt;I den bästa av alla världar kan jag fortsätta att betala via SMS och kostnaden hamnar på min telefonfaktura. Och sen när det passar kan jag öppna WyWallet-appen och köpa en SMS-biljett genom den så dras pengarna från mitt konto hos WyWallet. Synd att det inte fungerar så…&lt;/p&gt;

&lt;h2 id=&#39;hur_det_fungerar_och_varfr_wywallet_inte_r_en_frdig_tjnst_n&#39;&gt;Hur det fungerar och varför WyWallet inte är en färdig tjänst (än)&lt;/h2&gt;

&lt;p&gt;WyWallet hanterar nu alla mina köp. Utan möjlighet för mig att kunna välja själv. Går jag in i min WyWallet-app så finns det under Inställningar ett val där jag ska kunna ändra ”Betalsätt för SMS-köp”.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;WyWallet ger mig inte så många valmöjligheter.&#39; src=&#39;http://davidpaulsson.se/img/posts/wywallet-1.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Jahapp, tänker jag. När jag kollar det här sitter jag på tåget på väg till Stockholm och jag vet att jag kommer att behöva köpa en biljett till tunnelbanan som jag brukar göra. Eftersom jag bara precis registrerat mig på WyWallet så har jag inte laddat på några pengar i min digitala plånbok ännu, och känner inte riktigt för att sitta och krångla med det samtidigt som jag ska gå igenom spärrarna på T-centralen. Plus att jag vill ju inte betala det här privat, som jag berättade tidigare, jag vill att det här SMS-köpet ska hamna på mitt telefonabonnemang.&lt;/p&gt;

&lt;p&gt;Jag testar väl att beställa min SL-biljett via SMS som jag alltid gjort. Och så hoppas jag att&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Det fungerar som vanligt eller&lt;/li&gt;

&lt;li&gt;det funkar inte, men jag får någon slags möjlighet att betala via mitt abonnemang ändå.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img alt=&#39;Nehe? Vad gör jag nu då?&#39; src=&#39;http://davidpaulsson.se/img/posts/wywallet-2.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Nu är jag lite irriterad och får gå in på Pressbyrån och köpa en remsa för att kunna ta mig till jobbet (det går öven att betala enkelresa direkt i spärren, men det är pissdyrt + dom accepterar bara kontanter. Ha! ”Kontanter”, tänker du. Precis så. Vem har egentligen typ 80+ kronor i kontanter att åka tunnelbana på sig??).&lt;/p&gt;

&lt;h2 id=&#39;hej_svejs_wywallet&#39;&gt;Hej svejs WyWallet&lt;/h2&gt;

&lt;p&gt;Så jag bestämmer mig att för att ta bort mig från WyWallet så länge, återkomma någon gång i framtiden när det går att skilja på vilka köp som ska göras hur. Men inte ens det verkar vara speciellt enkelt.&lt;/p&gt;

&lt;p&gt;Jag besöker wywallet.se, loggar in och hittar mitt telefonnummer. Väljer att klicka på knappen Ta bort. Och får följande felmeddelande:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Minst ett mobilnummer måste vara registrerat.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ok? Varför visar ni mig en knapp där jag kan ta bort mig själv om det ändå inte går? Suck. Jag börjar Googla och &lt;a href=&#39;http://wywallet.se/kundtjanst/#10&#39;&gt;hittar följande på WyWallets kundsida&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Hur avslutar jag WyWallet?&lt;/strong&gt; För att avsluta WyWallet måste du skicka ett mejl från den e-postadress du har registrerat hos oss till kundtjanst@wywallet.se. Du måste ta ut alla dina pengar från WyWallet när du avslutar ditt konto.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Förlåt, men jag är lite allergisk mot tjänster som man inte kan avsluta (enkelt) om och när man vill.&lt;/p&gt;

&lt;h3 id=&#39;lite_credit_ska_ni_nd_ha&#39;&gt;Lite credit ska ni ändå ha&lt;/h3&gt;

&lt;p&gt;Tanken är jättebra. Verkligen, annars skulle jag inte ha registrerat mig från första början. Och ni säger faktiskt att det går bra att göra precis som jag vill, alltså betala som vanligt om man vill. Och via WyWallet när man vill. &lt;strong&gt;Med det den lilla detaljen att det kan man ju tydligen inte alls.&lt;/strong&gt; Hoppas ni löser detta.&lt;/p&gt;

&lt;p&gt;/rant.&lt;/p&gt;

&lt;h2 id=&#39;uppdatering_25_oktober_2012&#39;&gt;Uppdatering 25 oktober 2012&lt;/h2&gt;

&lt;p&gt;Efter att det här inlägget publicerades har jag pratat en del med &lt;a href=&#39;https://twitter.com/WyWallet&#39;&gt;@WyWallet&lt;/a&gt; på Twitter och det har visat sig att det jag vill aldrig kommer gå. Företagsabonnemang kommer adrig att kunna välja mobilfaktura på sina köp. Ovärt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WyWallet&lt;/strong&gt;: Tjena! Fr.o.m. 1/2 kommer sms-köp gå via WyWallet och tyvärr är det endast priv-ab som kommer kunna betala via mob-faktura.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jag&lt;/strong&gt;: Ok, så om jag vill fortsätta som innan, alltså att mina sms-köp läggs på telefonräkningen så måste jag avsluta WyWallet?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WyWallet&lt;/strong&gt;: ja tyvärr. Och fr.o.m. 1/2 kommer du inte kunna betala sms-köp via din ftg-mob-faktura alls.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jag&lt;/strong&gt;: Jahapp. Så då kommer jag alltså inte kunna köpa saker via telefonen, som företaget betalar för, via telefonen…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WyWallet&lt;/strong&gt;: Nope. :-(&lt;/p&gt;</description>
				<pubDate>Wed, 24 Oct 2012 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/wywallet-slapp-inte-en-tjanst-om-den-inte-ar-fardig</link>
				<guid isPermaLink="true">http://davidpaulsson.se/wywallet-slapp-inte-en-tjanst-om-den-inte-ar-fardig</guid>
			</item>
		
			<item>
				<title>Fem minuter från mitt bröllop</title>
				<description>&lt;p&gt;Ett stort tack till &lt;a href=&#39;http://wanbilly.com/&#39;&gt;Wan Billy&lt;/a&gt; som filmat och klippt ihop en fem minuters video från mitt och Yatys bröllop.&lt;/p&gt;</description>
				<pubDate>Thu, 02 Aug 2012 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/fem-minuter-fran-mitt-brollop</link>
				<guid isPermaLink="true">http://davidpaulsson.se/fem-minuter-fran-mitt-brollop</guid>
			</item>
		
			<item>
				<title>Webbdesign och retinaskärmar</title>
				<description>&lt;p&gt;&lt;a href=&#39;http://www.apple.com/se/macbook-pro/&#39;&gt;Igår släppte Apple sin nya MacBook Pro&lt;/a&gt; och äntligen får vi retinaupplösning på våra ”vanliga” skärmar. Fotografer och filmskapare är lyriska, men hur ska vi som jobbar med design på webben anpassa oss för en upplösning på 2880×1800 pixlar på en 15” skärm som ger hela 226.42 ppi?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ska vi fortsätta hysterin och göra separata bilder för alla olika enheter eller ska webbutvecklare äntligen börja arbeta med CSS3 och skalbar grafik på webben? Om vi fortsätter att skapa dubbla uppsättningar av våra bilder; ska vi ”straffa” besökare med bra skärmar med längre laddningstider bara för att vi måste ladda ner bilder som är dubbelt så stora?&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#39;hur_fungerar_det_rent_tekniskt&#39;&gt;Hur fungerar det rent tekniskt?&lt;/h2&gt;

&lt;p&gt;Att veta exakt vilken ppi besökaren har på sin skärm är nästan omöjligt. Jag använder till exempel en &lt;a href=&#39;http://www.dustinhome.se/product/5010330369/dell-u2410-ultrasharp-24-wide-tft-black/&#39;&gt;DELL U2410&lt;/a&gt; som har 1920×1200 pixlar genom 24”. Det ger min skärm 94.34 ppi. Medans min 15” MackBook Pro mid 2010 har en upplösning av 1680×1050 pixlar på 15” vilket ger den skärmen 132.08 ppi (alltså nästan hälften av de nya MacBook Pro-skärmarna som släpptes igår).&lt;/p&gt;

&lt;p&gt;Det hela är väldigt rörigt, men alla vi är vana att skapa design för webb i Photoshop med ett dokument som har 72 ppi. Jag gör det, du gör det, alla gör det. Det hela är väldigt krångigt och det är ok, man behöver inte veta exakt hur det fungerar. Men 72 ppi har fungerat hittills, och om skärmen har betydligt högre upplösning än så (till exempel en iPhone 4 eller de nya MacBook Pro-skärmarna) så kommer massor av krångliga algoritmer försöka hitta på nya pixlar med så kallad sub-pixel rendering.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;1) En pixel är en pixel. 2) En pixel kommer ”delas upp” och visas på samma yta, men är i själva verket flera stycken pixlar tack vare högre upplösning.&#39; src=&#39;http://davidpaulsson.se/img/posts/retinaskarm-pixel.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Skitkrångligt, strunt samma. Det enda vi behöver bry oss om är; hur får vi vår design att se bra ut oavsett vilken skärm besökaren har?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Låt oss generalisera lite nu.&lt;/strong&gt; En pixel på en vanlig skärm visas upp med pixeltätheten 72 ppi, samma bild på en retinaskärm kommer att visas upp med en pixeltäthet 326 ppi. Det är alltså betydligt fler pixlar på samma yta. Om vi visar upp en skärmdump från en iPhone eller skapar design för en iPhone behöver vi alltså en rityta som är 960×640 pixlar i 72 ppi.&lt;/p&gt;

&lt;p&gt;Ett sätt att anpassa oss är att sluta designa med exakt pixelkontroll. Dagarna när vi kan det är snart borta och det är lika bra att försöka anpassa oss så gott vi kan.&lt;/p&gt;

&lt;h2 id=&#39;skapa_design_med_css3&#39;&gt;Skapa design med CSS3&lt;/h2&gt;

&lt;p&gt;Med CSS kan vi komma väldigt långt med många element. Vi kan göra betydligt mer än att sätta runda hörn nu för tiden. Dessutom finns det många guider, plugins och fristående program som hjälper oss att återskapa det vi hittat på i Photoshop.&lt;/p&gt;

&lt;p&gt;Till exempel finns det spännande webbprojekt som Layer Styles där du i ett bekant gränssnitt kan skapa egen CSS.&lt;/p&gt;

&lt;p&gt;Till vardags använder jag själv ett litet program som heter Gradient för att skapa gradienter som fungerar bra på webben. Och igår köpte jag en Photoshop-plugin som heter CSS Hat som kan skapa CSS utifrån effektinställningarna på dina lager.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;Samma knapp på en retinaskärm. Den övre är CSS och den undre är pixlar. Bättre upplösning = sämre knapp. Du kan själv surfa till http://dev.davidpaulsson.se/csshat/ om du vill inspektera och titta vilken kod som CSS Hat trycker ut.&#39; src=&#39;http://davidpaulsson.se/img/posts/csshat-test.png&#39; /&gt;&lt;/p&gt;

&lt;h2 id=&#39;ikoner_som_typsnitt&#39;&gt;Ikoner som typsnitt&lt;/h2&gt;

&lt;p&gt;Det har släppts många riktigt bra ikon-typsnitt på senaste tid, de mest nämnvärda är &lt;a href=&#39;http://fortawesome.github.com/Font-Awesome/&#39;&gt;Font Awesome&lt;/a&gt;, &lt;a href=&#39;http://www.zurb.com/playground/foundation-icons&#39;&gt;Foundation Icons&lt;/a&gt;, &lt;a href=&#39;http://www.justbenicestudio.com/studio/websymbols/&#39;&gt;Web Symbols Typeface&lt;/a&gt; och &lt;a href=&#39;http://entypo.com/&#39;&gt;Entypo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#39;svggrafik_p_webben&#39;&gt;SVG-grafik på webben&lt;/h2&gt;

&lt;p&gt;Scalable Vector Graphics eller SVG är något som snart kommer kännas helt naturligt. Personligen är jag inte tillräckligt insatt för att skriva om det (än) men ett tag sedan var det &lt;a href=&#39;http://coding.smashingmagazine.com/2012/01/16/resolution-independence-with-svg/&#39;&gt;en bra artikel på Smashing Magazine&lt;/a&gt; som jag rekommenderar er att läsa.&lt;/p&gt;

&lt;h2 id=&#39;ladda_separata_bilder_fr_skrmar_med_hgre_upplsning&#39;&gt;Ladda separata bilder för skärmar med högre upplösning&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#39;retina.js&#39; src=&#39;http://davidpaulsson.se/img/posts/retinajs.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Ett snabbhack som kommer att fungera ett par år till är också att helt enkelt ladda större bilder för besökare som använder skärmar med bättre upplösning. Till exempel &lt;a href=&#39;http://retinajs.com/&#39;&gt;Retina.js&lt;/a&gt; som kommer att leta efter samma bild fast med ett tillägg i slutet och ladda de bilderna istället om användarens skärm stödjer det. Så då kan du skapa två bilder till exempel bild.png och bild@2x.png och be den hålla utkik för filtillägget @2x. Men det går bra att be den kika efter vad som helst, så du kan &lt;a href=&#39;http://codex.wordpress.org/Function_Reference/add_image_size&#39;&gt;sätta upp egna storlekar&lt;/a&gt; och låta WordPress-egna bildskalning skapa separata bilder för retinastärmar. Om WordPress då har skapat bild-150-150.png så kan du byta ut den till bild-300-300.png.&lt;/p&gt;

&lt;h2 id=&#39;vad_tror_ni&#39;&gt;Vad tror ni?&lt;/h2&gt;

&lt;p&gt;Hur tycker ni att man ska tackla alla dessa olika skärmstorlekar och upplösningar? Vad har ni får smarta program, webbsidor och tips för att arbeta med responsiv webbdesign och upplösnings-oberoende design på webben? Dela gärna med er nedan.&lt;/p&gt;

&lt;h3 id=&#39;uppdateringar&#39;&gt;Uppdateringar:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;La till Entypo i listan för ikon-typsnitt. Tack &lt;a href=&#39;http://twitter.com/#!/danielbruce_&#39;&gt;@danielbruce_&lt;/a&gt; för tipset!&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://cl.ly/0m0D3i032B282T0m3j29/o&#39;&gt;Här är en skärmdump från en ny MacBook Pro&lt;/a&gt; som visar precis hur många pixlar som får plats på dess 15″ skärm.&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;https://twitter.com/#!/Marlun&#39;&gt;@Marlun&lt;/a&gt; tipsar om om en bra resurs för SVG-ikoner, &lt;a href=&#39;http://thenounproject.com/&#39;&gt;The Noun Project&lt;/a&gt;. Tack Martin!&lt;/li&gt;
&lt;/ol&gt;</description>
				<pubDate>Tue, 12 Jun 2012 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/webbdesign-och-retinaskarmar</link>
				<guid isPermaLink="true">http://davidpaulsson.se/webbdesign-och-retinaskarmar</guid>
			</item>
		
			<item>
				<title>Teckenstorlek med px, %, em eller rem?</title>
				<description>&lt;p&gt;Att sätta rätt teckenstorlek på webben kan vara krångligt. Speciellt eftersom det finns så många skolor som alla berättar varför just deras sätt är bäst. Jag tänkte i det här inlägget försöka gå igenom skillnaderna, styrkorna och nackdelarna med de olika sätt man kan sätta teckenstorlek på webben med.&lt;/p&gt;

&lt;p&gt;Generellt så gäller följande regel: &lt;strong&gt;1em = 12pt = 16px = 100%&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#39;px&#39;&gt;px&lt;/h2&gt;

&lt;p&gt;Den lättaste lösningen är att kopiera samma teckenstorlek som förlagan i Photoshop (är teckenstorleken 12 pt så motsvarar det 16 px i vår CSS (vi skriver aldrig pt i CSS, men om det senare)). Men detta har visat sig dåligt då användaren inte kan använda textförstoring i webbläsaren utan måste zooma in hela webbsidan.&lt;/p&gt;

&lt;p&gt;Att skriva teckenstorleken i px är det absolut bästa sättet om man vill vara riktigt pixelexakt med sin design utifrån förlagan. 12 px är helt enkelt 12 pixlar.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;Text som är satt till 12px med CSS är 12 pixlar hög.&#39; src=&#39;http://davidpaulsson.se/img/posts/12px.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Att sätta text med pixlar har som sagt ett rätt dåligt rykte bland webbutvecklare och tillgänglighetsexperter då text som angetts i pixlar inte kan skalas upp/zoomas av besökare som använder IE6 eller tidigare. Inte ens i nyare versioner av Internet Explorer fungerar detta, men då finns det i alla fall en zoom-funktion i Internet Explorer som tillåter att användaren zoomar in ALLT innehåll på sidan. Det kan vara värt att tänka på, även om dina 20-någonting-ögon kan läsa text satt till 12px så är det inte alls säkert att dina besökare kan det.&lt;/p&gt;

&lt;h3 id=&#39;hur_var_det_med_pt_nu_d&#39;&gt;Hur var det med pt nu då?&lt;/h3&gt;

&lt;p&gt;Jo, pt, eller punkter, är bara för print-stil! Detta är viktigt att komma ihåg. pt kommer skala bra för storlek när man skriver ut, men måtten på ett papper (dpi, dots per inch) är inte alls samma sak som måtten på en skärm (ppi, pixels per inch). Det är helt enkelt fel att använda pt på webben. Så vi går inte in djupare på det, kom bara ihåg; använd det inte.&lt;/p&gt;

&lt;h2 id=&#39;em&#39;&gt;EM&lt;/h2&gt;

&lt;p&gt;EM är ett gammalt begrepp från &lt;a href=&#39;http://en.wikipedia.org/wiki/Em_%28typography%29&#39;&gt;tryckvärlden&lt;/a&gt; där ett M angav en full höjd och bredd på typsnittens tecken. Att använda em är kanske det knepigaste sättet i CSS då EM ärver stil från sina föräldrar. Så till exempel; om vi inte har deklarerat en typsnittsstorlek för vårt HTML-dokument så kommer det att vara webbläsarens standard (16px) och då är 1em = 16px. Skulle vi sätta &lt;code&gt;body { font-size:12px; }&lt;/code&gt; så skulle 1em = 12px, 2em = 24px och 0.5em = 6px.&lt;/p&gt;

&lt;p&gt;Det här med att EM ärver storleken från sin förälder blir lite svårt att hålla reda på om man har en djup struktur i sin CSS. Om man har en liknande struktur för t.ex. ett blogginlägg:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;html&#39;&gt;&lt;span class=&#39;nt&#39;&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
  &lt;span class=&#39;nt&#39;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;lt;hgroup&amp;gt;&lt;/span&gt;
      &lt;span class=&#39;nt&#39;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Titel&lt;span class=&#39;nt&#39;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class=&#39;nt&#39;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Undertitel&lt;span class=&#39;nt&#39;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;lt;/hgroup&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&#39;nt&#39;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Publicerat den …&lt;span class=&#39;nt&#39;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&#39;nt&#39;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
  &lt;span class=&#39;nt&#39;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;c&#39;&gt;&amp;lt;!-- Innehåll … --&amp;gt;&lt;/span&gt;
  &lt;span class=&#39;nt&#39;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&#39;nt&#39;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nu vill vi sätta större text på våra rubriker och mindre text på vår meta-information när inlägget har publicerats. Skriver vi då &lt;code&gt;header { font-size: 2em; }&lt;/code&gt; och sen &lt;code&gt;header div { font-size: .5em; }&lt;/code&gt; så kommer vår metainformation bli halva storleken av förälderns element (dvs motsvarigheten till 1em). Alltså inte alls vad vi egentligen ville. Så här gäller det att hålla tungan rätt i mun.&lt;/p&gt;

&lt;p&gt;EM kan även användas som en generell måttenhet, så det går utmärkt att skriva t.ex. &lt;code&gt;margin: 2em 0;&lt;/code&gt;. För att enkelt komma ihåg textstorlekarna och kunna översätta Photoshop till CSS så brukar man ange &lt;code&gt;html { font-size: 62.5%; }&lt;/code&gt; i sin reset så att 1em = 10px. Då kan man enkelt skriva 1.6em för att få text som är 16px stor (t.ex.).&lt;/p&gt;

&lt;h2 id=&#39;id1&#39;&gt;%&lt;/h2&gt;

&lt;p&gt;Procent beter sig ungefär som EM och skalar tillsammans med förälderns element. Jag har läst att procent skalar annorlunda när man använder font-size: smallest eller font-size: largest och liknande, men jag har själv inte lyckats återskapa problemet. Det kan vara ett Internet Explorer-problem (som så mycket annat ;)). Men använder du inte den typen av deklarationer kan du använda % eller EM, helt beroende på vad du själv tycker är enklast.&lt;/p&gt;

&lt;h2 id=&#39;rem&#39;&gt;REM&lt;/h2&gt;

&lt;p&gt;REM, eller Root EM, är en hyfsat ny måttenhet som kom med CSS3 och beter sig som EM, men med den stora skillnaden att den inte bryr sig om sin förälder. Med Root så menas den att den bara bryr sig om dokumentets root, alltså HTML-deklarationen som styr teckenstorleken. Så har man angett html { font-size: 62.5%; } i sin CSS så är 1.2rem samma sak som 12px, oavsett vad det omslutande elementet har. Sweet!&lt;/p&gt;

&lt;h3 id=&#39;men_hur_ser_det_ut_med_baktkompabilitet_fr_rem_d&#39;&gt;Men; hur ser det ut med bakåtkompabilitet för REM då?&lt;/h3&gt;

&lt;p&gt;Jo, tyvärr så är det rätt så kasst–men det finns ljuspunkter. Minns ni vad jag skrev om att inte ens nya versioner av Internet Explorer klarar av att skala text utan att zooma hela webbsidan? Ta-daa; från och med Internet Explorer 9 och uppåt klarar man det, men bara med REM. Dock så har inte versioner tidigare än Internet Explorer 9 någon som helst aning om vad REM är så då måste vi lägga in en fallback i vår kod. Men ändå, att skriva en fallback är ett litet pris att betala för att slippa slita sitt hår varje gång man vill ta vara på användarvänlighet och enkelt kunna räkna ut teckenstorleken.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;css&#39;&gt;&lt;span class=&#39;nt&#39;&gt;p&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
  &lt;span class=&#39;k&#39;&gt;font-size&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;m&#39;&gt;12px&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;//&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;Fallback&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;f&lt;/span&gt;&lt;span class=&#39;err&#39;&gt;ö&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;r&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;IE8&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;och&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;tidigare&lt;/span&gt;
  &lt;span class=&#39;k&#39;&gt;font-size&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;m&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;m&#39;&gt;2&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;rem&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;//&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;Alla&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;andra&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;vettiga&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;webbl&lt;/span&gt;&lt;span class=&#39;err&#39;&gt;ä&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;sare&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#39;slutsats&#39;&gt;Slutsats&lt;/h2&gt;

&lt;p&gt;Vill du enkelt kunna ange rätt teckenstorlek utan att bli galen på vägen samtidigt som du försöker omfamna användarvänliga utvecklingsmetoder så använd REM med fallback som px.&lt;/p&gt;</description>
				<pubDate>Fri, 18 May 2012 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/teckenstorlek-med-px-em-eller-rem</link>
				<guid isPermaLink="true">http://davidpaulsson.se/teckenstorlek-med-px-em-eller-rem</guid>
			</item>
		
			<item>
				<title>Bara så att du vet pappa</title>
				<description>&lt;p&gt;Nu har det gått precis ett år sedan du gick bort i cancer. Det var strax efter din 60 årsfest som vi upptäckte din hjärntumör och sedan gick det ett halvår innan du var borta. Det var det snabbaste halvåret jag upplevt.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;Sven-Arne Paulsson&#39; src=&#39;http://davidpaulsson.se/img/posts/sven-arne.jpg&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Det gick fort, men ändå inte så fort som det skulle kunnat ha gått. Du skulle till exempel ha kunnat gått bort av någon helt annan orsak, en trafikolycka kanske. Jag är glad över att vi fick det sista halvåret tillsammans och fick prata med varandra och inom familjen. Det kändes fint.&lt;/p&gt;

&lt;p&gt;Jag vet att du kände lite ångest över att du reste mycket när jag var liten pappa, men om du läser det här så ska du veta att det gör ingenting. Du var alltid min hjälte och jag har alltid pratat om dig med stolthet. Jag visste att du hade ett viktigt jobb, och det gjorde mig stolt. Jag ville bli precis som dig.&lt;/p&gt;

&lt;p&gt;Det känns lite absurt att tala om det, men ändå bra på något vis. Jag saknar dig pappa och jag är ledsen över att du inte kommer att få uppleva mina barn och att dom aldrig kommer få träffa dig. Jag önskar att du kunde närvara på mitt bröllop. Att du finns till hands när det är något krångligt som måste lösas. Du kunde alltid lösa allt krångligt.&lt;/p&gt;

&lt;p&gt;Bara så att du vet pappa; jag saknar dig. Jag älskar dig.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Barnbarnen viftar kring benen ‐ som smultron på ett strå ‐ de tänder min kärlek, den sista, lika häftig som då&lt;/em&gt;&lt;/p&gt;</description>
				<pubDate>Wed, 31 Aug 2011 00:00:00 +0200</pubDate>
				<link>http://davidpaulsson.se/bara-sa-att-du-vet-pappa</link>
				<guid isPermaLink="true">http://davidpaulsson.se/bara-sa-att-du-vet-pappa</guid>
			</item>
		
	</channel>
</rss>